===affil2:
National Center for Atmospheric Research (NCAR).
University of Colorado
===firstname:
Jose
===firstname4:

===firstname3:
Rory
===lastname2:
Garcia
===lastname:
Garcia
===firstname5:

===affil6:

===lastname3:
Kelly
===email:
jgarcia@ucar.edu
===lastname6:

===affil5:

===otherauths:

===lastname4:

===affil4:

===lastname7:

===affil7:

===firstname7:

===postal:
PO Box 3000
Boulder, CO
80307
===firstname6:

===ABSTRACT:
Multigrid solvers are considered to be the most efficient methods to solve many classes of numerical problems.  However, the true performance of these methods depends on their specific implementations for different computer architectures.  In recent years the continuing increase in single threaded microprocessor performance has stalled as designs have become bound by fundamental limitations with the underlying device physics.  These
limitations have ushered in a new era of multi-core, many-core, and heterogeneous core processors, aimed at increasing speed through explicit parallelism. For Multigrid algorithms to benefit from this recent trend they must be able to efficiently exploit the parallelism offered by the underlying hardware. We explore
the complexities, performance and limitations that Multigrid methods may face when implemented for several current generation accelerators, including the Cell Broadband Engine and NVIDIA Graphics Processing Units.
===affil3:
National Center for Atmospheric Research (NCAR).Multigrid solvers are considered to be the most efficient methods to solve
many classes of numerical problems.  However, the true performance of these
methods depends on their specific implementations for different
computer architectures.  In recent years the continuing increase in single
threaded microprocessor performance has stalled as designs have become
bound by fundamental limitations with the underlying device physics.  These
limitations have ushered in a new era or multi-core, many-core, and heterogenous
core processors, aimed at increasing speed through explicit parallelism. For
Multigrid algorithms to benefit from this recent trend they must be able to
efficiently exploit the parallelism offered by the underlying hardware. We explore
the complexities, performance and limitations that Multigrid methods may face
when implemented for several current generation accelerators, including the
Cell Broadband Engine and NVIDIA Graphics Processing Units.
===lastname5:

===affilother:

===title:
Comparing Multigrid Solver Performance on Many-Core Accelerators.
===firstname2:
Jose
